-- upstream: https://github.com/graphql/graphql-js/blob/00d4efea7f5b44088356798afff0317880605f4d/src/jsutils/mapValue.js
--[[
 * Creates an object map with the same keys as `map` and values generated by
 * running each value of `map` thru `fn`.
 ]]
local Map = require(script.Parent.Parent.luaUtils.Map)
type Map<T, V> = Map.Map<T, V>

-- ROBLOX TODO: update Luau types once generics are enabled
-- export function mapValue<T, V>(
-- 	map: ObjMap<T>,
-- 	fn: (value: T, key: string) => V,
--   ): ObjMap<V> {

local function mapValue(
    map: Map<string, any>,
    fn: (any, string) -> any
): Map<string, any>
  	local result = Map.new()
	for _, entry in map:ipairs() do
		local key, value = entry[1], entry[2]
		result:set(key, fn(value, key))
	end
	return result
end

return {
	mapValue = mapValue
}
